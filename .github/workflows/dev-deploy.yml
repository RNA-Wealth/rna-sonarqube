name: Deploy To DEV

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['develop']
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Create vpn conf and ssh keys
        run: | 
          echo ${{ secrets.DEV_OPENVPN_BASE64 }} | base64 -d > ./config.ovpn
          echo ${{ secrets.DEV_SSH_USER_PRIVATE_KEY_BASE64 }} | base64 -d > ./id_rsa
          chmod 600 ./id_rsa
      - name: Install OpenVPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved
      - name: Connect to VPN
        uses: "kota65535/github-openvpn-connect-action@v2"
        with:
          config_file: ./config.ovpn
          username: ${{ secrets.DEV_OPENVPN_USER }}
          password: ${{ secrets.DEV_OPENVPN_PASSWORD }}
      - name: deploy to cluster
        uses: wahyd4/kubectl-helm-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.DEV_KUBE_CONFIG_BASE64 }}
        with:
          args: |
            helm repo add sonarqube https://SonarSource.github.io/helm-chart-sonarqube
            helm repo update
            helm install --force -n sonarqube sonarqube sonarqube/sonarqube -f values.yaml 
      # - name: Create vpn conf and ssh keys
      #   run: | 
      #     echo ${{ secrets.DEV_OPENVPN_BASE64 }} | base64 -d > ./config.ovpn
      #     echo ${{ secrets.DEV_SSH_USER_PRIVATE_KEY_BASE64 }} | base64 -d > ./id_rsa
      #     chmod 600 ./id_rsa
      # - name: Install OpenVPN
      #   run: |
      #     sudo apt update
      #     sudo apt install -y openvpn openvpn-systemd-resolved
      # - name: Connect to VPN
      #   uses: "kota65535/github-openvpn-connect-action@v2"
      #   with:
      #     config_file: ./config.ovpn
      #     username: ${{ secrets.DEV_OPENVPN_USER }}
      #     password: ${{ secrets.DEV_OPENVPN_PASSWORD }}
      # - name: connect to dev
      #   uses: appleboy/ssh-action@v0.1.10
      #   with:
      #     host: ${{ secrets.DEV_VM_HOST }}
      #     username: ${{ secrets.DEV_SSH_USER }}
      #     key_path: ./id_rsa
      #     port: ${{ secrets.DEV_SSH_PORT }}
      #     passphrase: ${{ secrets.DEV_SSH_PASSPHRASE }}
      #     script: |
      #       ls -al
      #       hostname
      #       curl dev-sonarqube.rna.lab
      # - name: copy shell file
      #   uses: canastro/copy-file-action@master
      #   with:
      #     source: "sonarqube.sh"
      #     target: "rna-sonaruqbe/sonarqube.sh"
      # - name: copy value yaml
      #   uses: canastro/copy-file-action@master
      #   with:
      #     source: "values.yaml"
      #     target: "rna-sonaruqbe/values.yaml"
      # - name: run shell
      #   run: |
      #     ./rna-sonarqube/sonarqube.sh
          
